{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/blade/Documents/projects/react/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\"; // this class has access to match, history and location\n// because inside App.js, ShopPage is nested in a Route\n\nclass ShopPage extends React.component {\n  constructor(...args) {\n    super(...args);\n    this.unsuscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    const hh = collectionRef.doc(\"0\");\n\n    if (!hh.exists) {\n      console.log(\"no hay\");\n    } else {\n      console.log(\"si hay \", hh.data());\n    }\n\n    collectionRef.onSnapshot(async snapshot => {\n      console.log(\"ostia\", snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/blade/Documents/projects/react/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","ShopPage","component","unsuscribeFromSnapshot","componentDidMount","collectionRef","collection","hh","doc","exists","console","log","data","onSnapshot","snapshot","render","match","props","path"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP,C,CAKA;AACA;;AACA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,sBADqC,GACZ,IADY;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,EAAE,GAAGF,aAAa,CAACG,GAAd,CAAkB,GAAlB,CAAX;;AACA,QAAI,CAACD,EAAE,CAACE,MAAR,EAAgB;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,EAAE,CAACK,IAAH,EAAvB;AACD;;AAEDP,IAAAA,aAAa,CAACQ,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3CJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,QAArB;AACD,KAFD;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAErB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEmB,KAAK,CAACE,IAAK,gBADtB;AAEE,QAAA,SAAS,EAAEpB;AAFb;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA/BoC;;AAkCvC,eAAeG,QAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\n// this class has access to match, history and location\n// because inside App.js, ShopPage is nested in a Route\nclass ShopPage extends React.component {\n  unsuscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    const hh = collectionRef.doc(\"0\");\n    if (!hh.exists) {\n      console.log(\"no hay\");\n    } else {\n      console.log(\"si hay \", hh.data());\n    }\n\n    collectionRef.onSnapshot(async (snapshot) => {\n      console.log(\"ostia\", snapshot);\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        {/* \":\" allows to use \"collectionId\" as a parameter on the match object\n        inside CollectionPage\n     */}\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}
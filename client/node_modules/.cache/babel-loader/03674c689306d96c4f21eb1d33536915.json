{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/blade/Documents/projects/react/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\"; // this class has access to match, history and location\n// because inside App.js, ShopPage is nested in a Route\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n    /*\n    // Observer pattern\n    collectionRef.onSnapshot(async (snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n    */\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverviewContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPageContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchProps)(ShopPage);","map":{"version":3,"sources":["/home/blade/Documents/projects/react/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStartAsync","ShopPage","Component","componentDidMount","props","render","match","path","mapDispatchProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C,C,CAEA;AACA;;AACA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEH,MAAAA;AAAF,QAAiC,KAAKI,KAA5C;AACAJ,IAAAA,0BAA0B;AAC1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACG;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFtB;AAGE,QAAA,SAAS,EAAET;AAHb;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBADtB;AAEE,QAAA,SAAS,EAAER;AAFb;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAjCoC;;AAoCvC,MAAMS,gBAAgB,GAAIC,QAAD,KAAe;AACtCT,EAAAA,0BAA0B,EAAE,MAAMS,QAAQ,CAACT,0BAA0B,EAA3B;AADJ,CAAf,CAAzB;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOW,gBAAP,CAAP,CAAgCP,QAAhC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\n\n// this class has access to match, history and location\n// because inside App.js, ShopPage is nested in a Route\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n    /*\n    // Observer pattern\n    collectionRef.onSnapshot(async (snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n    */\n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        {/* \":\" allows to use \"collectionId\" as a parameter on the match object\n        inside CollectionPage\n     */}\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPageContainer}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(null, mapDispatchProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}
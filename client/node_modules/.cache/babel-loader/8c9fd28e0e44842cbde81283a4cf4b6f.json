{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/blade/Documents/projects/react/crwn-clothing/src/App.js\";\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport \"./App.css\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component.jsx\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sing-in-and-sign-up.component.jsx\";\nimport CheckoutPage from \"./pages/checkout/checkout.component.jsx\";\nimport Header from \"./components/header/header.component.jsx\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selectror\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {// this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDocument(userAuth);\n    //     // Get the snapShot from the reference with the data ...\n    //     // ... and set state with the user data\n    //     userRef.onSnapshot((snapShot) => {\n    //       setCurrentUser({\n    //         currentUser: {\n    //           id: snapShot.id,\n    //           ...snapShot.data(),\n    //         },\n    //       });\n    //     });\n    //   } else {\n    //     setCurrentUser(userAuth);\n    //   }\n    //   // upload shop data to firebase\n    //   /*\n    //   addCollectionAndDocuments(\n    //     \"collections\",\n    //     collectionsArray.map(({ title, items }) => ({ title, items }))\n    //   ); */\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: ShopPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/checkout\",\n          component: CheckoutPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signin\",\n          render: () => this.props.currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(SignInAndSignUpPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser //collectionsArray: selectCollectionsForPreview,\n\n});\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/blade/Documents/projects/react/crwn-clothing/src/App.js"],"names":["React","Route","Switch","Redirect","connect","createStructuredSelector","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","Header","setCurrentUser","selectCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","props","currentUser","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,mBAAP,MAAgC,+DAAhC;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AAEA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,iBAAT,QAAkC,6BAAlC;;AAEA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKF,mBAAL;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEZ;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,WAAlB;AAA8B,UAAA,SAAS,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,IAAI,EAAC,SAFP;AAGE,UAAA,MAAM,EAAE,MACN,KAAKU,KAAL,CAAWC,WAAX,gBACE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,gBAGE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAvD+B;;AA0DlC,MAAMC,eAAe,GAAGhB,wBAAwB,CAAC;AAC/Ce,EAAAA,WAAW,EAAER,iBADkC,CAE/C;;AAF+C,CAAD,CAAhD;AAKA,eAAeR,OAAO,CAACiB,eAAD,CAAP,CAAyBR,GAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport \"./App.css\";\n\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component.jsx\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sing-in-and-sign-up.component.jsx\";\nimport CheckoutPage from \"./pages/checkout/checkout.component.jsx\";\n\nimport Header from \"./components/header/header.component.jsx\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selectror\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDocument(userAuth);\n    //     // Get the snapShot from the reference with the data ...\n    //     // ... and set state with the user data\n    //     userRef.onSnapshot((snapShot) => {\n    //       setCurrentUser({\n    //         currentUser: {\n    //           id: snapShot.id,\n    //           ...snapShot.data(),\n    //         },\n    //       });\n    //     });\n    //   } else {\n    //     setCurrentUser(userAuth);\n    //   }\n    //   // upload shop data to firebase\n    //   /*\n    //   addCollectionAndDocuments(\n    //     \"collections\",\n    //     collectionsArray.map(({ title, items }) => ({ title, items }))\n    //   ); */\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}></Route>\n          <Route path=\"/shop\" component={ShopPage}></Route>\n          <Route exact path=\"/checkout\" component={CheckoutPage}></Route>\n          <Route\n            exact\n            path=\"/signin\"\n            render={() =>\n              this.props.currentUser ? (\n                <Redirect to=\"/\" />\n              ) : (\n                <SignInAndSignUpPage />\n              )\n            }\n          ></Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  //collectionsArray: selectCollectionsForPreview,\n});\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}
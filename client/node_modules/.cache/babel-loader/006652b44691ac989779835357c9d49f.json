{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/blade/Documents/projects/react/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching, selectIsCollectionsIsLoaded } from \"../../redux/shop/shop.selector\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage); // this class has access to match, history and location\n// because inside App.js, ShopPage is nested in a Route\n\n_c = CollectionsPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n    /*\n    // Observer pattern\n    collectionRef.onSnapshot(async (snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n    */\n  }\n\n  render() {\n    const {\n      match,\n      iscollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverviewContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsPageWithSpinner, {\n          isLoading: !iscollectionLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  iscollectionLoaded: selectIsCollectionsIsLoaded\n});\n\nconst mapDispatchProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchProps)(ShopPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionsPageWithSpinner\");","map":{"version":3,"sources":["/home/blade/Documents/projects/react/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","CollectionsOverviewContainer","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsIsLoaded","WithSpinner","CollectionsPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","iscollectionLoaded","path","mapStateToProps","mapDispatchProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SACEC,0BADF,EAEEC,2BAFF,QAGO,gCAHP;AAKA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,0BAA0B,GAAGD,WAAW,CAACJ,cAAD,CAA9C,C,CAEA;AACA;;KAHMK,0B;;AAIN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEP,MAAAA;AAAF,QAAiC,KAAKQ,KAA5C;AACAR,IAAAA,0BAA0B;AAC1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACG;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAgC,KAAKH,KAA3C;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFtB;AAGE,QAAA,SAAS,EAAEd;AAHb;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACE,IAAK,gBADtB;AAEE,QAAA,MAAM,EAAGJ,KAAD,iBACN,QAAC,0BAAD;AACE,UAAA,SAAS,EAAE,CAACG,kBADd;AAAA,aAEMH;AAFN;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAtCoC;;AAyCvC,MAAMK,eAAe,GAAGhB,wBAAwB,CAAC;AAC/Cc,EAAAA,kBAAkB,EAAET;AAD2B,CAAD,CAAhD;;AAIA,MAAMY,gBAAgB,GAAIC,QAAD,KAAe;AACtCf,EAAAA,0BAA0B,EAAE,MAAMe,QAAQ,CAACf,0BAA0B,EAA3B;AADJ,CAAf,CAAzB;;AAIA,eAAeJ,OAAO,CAACiB,eAAD,EAAkBC,gBAAlB,CAAP,CAA2CT,QAA3C,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPage from \"../collection/collection.component\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport {\n  selectIsCollectionFetching,\n  selectIsCollectionsIsLoaded,\n} from \"../../redux/shop/shop.selector\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\n// this class has access to match, history and location\n// because inside App.js, ShopPage is nested in a Route\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n    /*\n    // Observer pattern\n    collectionRef.onSnapshot(async (snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n    */\n  }\n\n  render() {\n    const { match, iscollectionLoaded } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        {/* \":\" allows to use \"collectionId\" as a parameter on the match object\n        inside CollectionPage\n     */}\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => (\n            <CollectionsPageWithSpinner\n              isLoading={!iscollectionLoaded}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  iscollectionLoaded: selectIsCollectionsIsLoaded,\n});\n\nconst mapDispatchProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}
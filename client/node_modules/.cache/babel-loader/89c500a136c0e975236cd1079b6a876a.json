{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/blade/Documents/projects/react/crwn-clothing/client/src/pages/checkout/checkout.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\nimport BillingDetailsFields from \"./billing-credentials-fields\";\nimport { selectCartItems, selectCartTotal } from \"../../redux/cart/cart.selectors\";\nimport \"./checkout.styles.scss\";\n\nconst CheckoutPage = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      console.log(\"Stripe 23 | token generated!\", paymentMethod);\n\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:8080/stripe/charge\", {\n          amount: 999,\n          id: id\n        });\n        console.log(\"Stripe 35 | data\", response.data.success);\n\n        if (response.data.success) {\n          console.log(\"CheckoutForm.js 25 | payment successful!\");\n        }\n      } catch (error) {\n        console.log(\"CheckoutForm.js 28 | \", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      maxWidth: 400\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutPage, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutPage;\nexport default CheckoutPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"sources":["/home/blade/Documents/projects/react/crwn-clothing/client/src/pages/checkout/checkout.component.jsx"],"names":["React","connect","createStructuredSelector","CardElement","useStripe","useElements","axios","CheckoutItem","BillingDetailsFields","selectCartItems","selectCartTotal","CheckoutPage","stripe","elements","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","console","log","id","response","post","amount","data","success","message","maxWidth"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,oBAAP,MAAiC,8BAAjC;AAEA,SACEC,eADF,EAEEC,eAFF,QAGO,iCAHP;AAKA,OAAO,wBAAP;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2B,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoBnB,WAApB;AAF0D,KAA3B,CAAvC;;AAKA,QAAI,CAACc,KAAL,EAAY;AACVM,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CN,aAA5C;;AACA,UAAI;AACF,cAAM;AAAEO,UAAAA;AAAF,YAASP,aAAf;AACA,cAAMQ,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CACrB,qCADqB,EAErB;AACEC,UAAAA,MAAM,EAAE,GADV;AAEEH,UAAAA,EAAE,EAAEA;AAFN,SAFqB,CAAvB;AAQAF,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCE,QAAQ,CAACG,IAAT,CAAcC,OAA9C;;AACA,YAAIJ,QAAQ,CAACG,IAAT,CAAcC,OAAlB,EAA2B;AACzBP,UAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACD;AACF,OAdD,CAcE,OAAOP,KAAP,EAAc;AACdM,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCP,KAArC;AACD;AACF,KAnBD,MAmBO;AACLM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACc,OAAlB;AACD;AACF,GA7BD;;AA+BA,sBACE;AAAM,IAAA,QAAQ,EAAEjB,YAAhB;AAA8B,IAAA,KAAK,EAAE;AAAEkB,MAAAA,QAAQ,EAAE;AAAZ,KAArC;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzCD;;GAAMrB,Y;UACWP,S,EACEC,W;;;KAFbM,Y;AA2CN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\nimport axios from \"axios\";\n\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\nimport BillingDetailsFields from \"./billing-credentials-fields\";\n\nimport {\n  selectCartItems,\n  selectCartTotal,\n} from \"../../redux/cart/cart.selectors\";\n\nimport \"./checkout.styles.scss\";\n\nconst CheckoutPage = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n\n    if (!error) {\n      console.log(\"Stripe 23 | token generated!\", paymentMethod);\n      try {\n        const { id } = paymentMethod;\n        const response = await axios.post(\n          \"http://localhost:8080/stripe/charge\",\n          {\n            amount: 999,\n            id: id,\n          }\n        );\n\n        console.log(\"Stripe 35 | data\", response.data.success);\n        if (response.data.success) {\n          console.log(\"CheckoutForm.js 25 | payment successful!\");\n        }\n      } catch (error) {\n        console.log(\"CheckoutForm.js 28 | \", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ maxWidth: 400 }}>\n      <CardElement />\n      <button>Pay</button>\n    </form>\n  );\n};\n\nexport default CheckoutPage;\n"]},"metadata":{},"sourceType":"module"}